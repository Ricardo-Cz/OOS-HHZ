/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hhz.graphicaluserinterface;

import static hhz.graphicaluserinterface.GraphicHelperClass.ExtractLineBoundingBox;
import static hhz.graphicaluserinterface.GraphicHelperClass.ExtractLineText;
import static hhz.graphicaluserinterface.GraphicHelperClass.scaleFactor;
import hhz.graphicaluserinterface.json.BoundingBoxObject;
import hhz.graphicaluserinterface.json.Lines;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Menu;
import java.awt.image.BufferedImage;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import static java.lang.Thread.sleep;
import java.lang.reflect.Field;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.attribute.BasicFileAttributes;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.border.Border;
import javax.swing.border.MatteBorder;
import org.apache.commons.io.comparator.LastModifiedFileComparator;
import org.json.simple.JSONObject;
import sqlite.DBController;

/**
 *
 * @author Valerij
 */
public class Home extends javax.swing.JFrame implements PropertyChangeListener {

    private final static String ROOT_PATH = "root_path";
    private final static String SETTINGS_DATA = "settings_data";
    private final static String SELECTED_DATE = "selected_date";
    private final static String SELECTED_TIME = "selected_time";
    private final static String CAM1 = "cam1";
    private final static String CAM2 = "cam2";
    private final static String CAM3 = "cam3";
    private final static String CAM4 = "cam4";
    private final static String CAM5 = "cam5";

    TableCellRenderer renderer = new TableCellRenderer();
    static DBController dbc2 = DBController.getInstance();
    static int gl_shelf_id = -1;
    static int gl_row_id = -1;
    static int gl_place_id = -1;
    private Task task;

    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
        BindComboboxSetting();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator2 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        sidepanel3 = new javax.swing.JPanel();
        gallaryview3 = new javax.swing.JPanel();
        jLabelGalleryImage3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        virtualrunaround = new javax.swing.JPanel();
        jLabelVirtualImage = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        reporting = new javax.swing.JPanel();
        jLabelReportingLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        settings = new javax.swing.JPanel();
        jLabelSettingsImage = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        logopanel = new javax.swing.JPanel();
        jLabelLogoImage = new javax.swing.JLabel();
        footerpanel = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        gallaryview4 = new javax.swing.JPanel();
        jLabelGalleryImage4 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        mainPanel = new javax.swing.JPanel();
        galleryViewPanel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        g1Panel = new javax.swing.JPanel();
        g1Label = new javax.swing.JLabel();
        g2Panel = new javax.swing.JPanel();
        g2Label = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        g3Panel = new javax.swing.JPanel();
        g3Label = new javax.swing.JLabel();
        g4Panel = new javax.swing.JPanel();
        g4Label = new javax.swing.JLabel();
        g5Panel = new javax.swing.JPanel();
        g5Label = new javax.swing.JLabel();
        lastImage = new javax.swing.JLabel();
        nextImage = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel13 = new javax.swing.JLabel();
        currentDirectoryPathField = new javax.swing.JTextField();
        cam5text = new javax.swing.JLabel();
        cam1text = new javax.swing.JLabel();
        cam2text = new javax.swing.JLabel();
        cam3text = new javax.swing.JLabel();
        cam4text = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        StartLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabelFileCreateTime = new javax.swing.JLabel();
        jFileName = new javax.swing.JLabel();
        virtualRunaroundPanel = new javax.swing.JPanel();
        StorePanel = new javax.swing.JPanel();
        cam2_below = new javax.swing.JLabel();
        cam1_above = new javax.swing.JLabel();
        jLabelStore = new javax.swing.JLabel();
        ShelfPanel = new javax.swing.JPanel();
        jptid1 = new javax.swing.JLabel();
        jptid2 = new javax.swing.JLabel();
        jptid3 = new javax.swing.JLabel();
        jptid4 = new javax.swing.JLabel();
        jptid5 = new javax.swing.JLabel();
        jptid6 = new javax.swing.JLabel();
        jptid7 = new javax.swing.JLabel();
        jptid8 = new javax.swing.JLabel();
        jptid9 = new javax.swing.JLabel();
        jptid10 = new javax.swing.JLabel();
        jLabelShelf = new javax.swing.JLabel();
        jScrollPaneforTable = new javax.swing.JScrollPane();
        jLabel34 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        reportingPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        settingsPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel22 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        generalSettingsPathBox = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jcombo1 = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jcombo2 = new javax.swing.JComboBox<>();
        jLabel30 = new javax.swing.JLabel();
        jcomboTime2 = new javax.swing.JComboBox<>();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        jcomboTime1 = new javax.swing.JComboBox<>();
        jLabel27 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout());

        sidepanel3.setBackground(new java.awt.Color(204, 35, 42));
        sidepanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        gallaryview3.setBackground(new java.awt.Color(160, 35, 42));
        gallaryview3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        gallaryview3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gallaryviewMouseClicked(evt);
            }
        });

        jLabelGalleryImage3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelGalleryImage3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/gallery.png"))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Gallery View");

        javax.swing.GroupLayout gallaryview3Layout = new javax.swing.GroupLayout(gallaryview3);
        gallaryview3.setLayout(gallaryview3Layout);
        gallaryview3Layout.setHorizontalGroup(
            gallaryview3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gallaryview3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabelGalleryImage3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(73, Short.MAX_VALUE))
        );
        gallaryview3Layout.setVerticalGroup(
            gallaryview3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gallaryview3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(gallaryview3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel6)
                    .addComponent(jLabelGalleryImage3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        sidepanel3.add(gallaryview3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 280, -1));

        virtualrunaround.setBackground(new java.awt.Color(204, 35, 42));
        virtualrunaround.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        virtualrunaround.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                virtualrunaroundMouseClicked(evt);
            }
        });

        jLabelVirtualImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelVirtualImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/eye.png"))); // NOI18N

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Virtual Runaround");

        javax.swing.GroupLayout virtualrunaroundLayout = new javax.swing.GroupLayout(virtualrunaround);
        virtualrunaround.setLayout(virtualrunaroundLayout);
        virtualrunaroundLayout.setHorizontalGroup(
            virtualrunaroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(virtualrunaroundLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabelVirtualImage, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        virtualrunaroundLayout.setVerticalGroup(
            virtualrunaroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(virtualrunaroundLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(virtualrunaroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel5)
                    .addComponent(jLabelVirtualImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        sidepanel3.add(virtualrunaround, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 190, 280, -1));

        reporting.setBackground(new java.awt.Color(204, 35, 42));
        reporting.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        reporting.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reportingMouseClicked(evt);
            }
        });

        jLabelReportingLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelReportingLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/analysis.png"))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Analyse");

        javax.swing.GroupLayout reportingLayout = new javax.swing.GroupLayout(reporting);
        reporting.setLayout(reportingLayout);
        reportingLayout.setHorizontalGroup(
            reportingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reportingLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabelReportingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        reportingLayout.setVerticalGroup(
            reportingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reportingLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(reportingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel7)
                    .addComponent(jLabelReportingLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        sidepanel3.add(reporting, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, 280, -1));

        settings.setBackground(new java.awt.Color(204, 35, 42));
        settings.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        settings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                settingsMouseClicked(evt);
            }
        });

        jLabelSettingsImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelSettingsImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/settings.png"))); // NOI18N

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Settings");

        javax.swing.GroupLayout settingsLayout = new javax.swing.GroupLayout(settings);
        settings.setLayout(settingsLayout);
        settingsLayout.setHorizontalGroup(
            settingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabelSettingsImage, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        settingsLayout.setVerticalGroup(
            settingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(settingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel11)
                    .addComponent(jLabelSettingsImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        sidepanel3.add(settings, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 290, 280, -1));

        logopanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabelLogoImage.setBackground(new java.awt.Color(255, 255, 255));
        jLabelLogoImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelLogoImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/kauflandLogo.png"))); // NOI18N

        javax.swing.GroupLayout logopanelLayout = new javax.swing.GroupLayout(logopanel);
        logopanel.setLayout(logopanelLayout);
        logopanelLayout.setHorizontalGroup(
            logopanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logopanelLayout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(jLabelLogoImage, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(100, Short.MAX_VALUE))
        );
        logopanelLayout.setVerticalGroup(
            logopanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, logopanelLayout.createSequentialGroup()
                .addComponent(jLabelLogoImage, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        sidepanel3.add(logopanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 280, 30));

        footerpanel.setBackground(new java.awt.Color(255, 255, 255));
        footerpanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(204, 35, 42));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("© Copyright by HHZ");
        footerpanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(79, 0, 115, 36));

        sidepanel3.add(footerpanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 820, 280, 30));

        gallaryview4.setBackground(new java.awt.Color(160, 35, 42));
        gallaryview4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        gallaryview4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gallaryview4gallaryviewMouseClicked(evt);
            }
        });

        jLabelGalleryImage4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelGalleryImage4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/gallery.png"))); // NOI18N

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Gallery View");

        javax.swing.GroupLayout gallaryview4Layout = new javax.swing.GroupLayout(gallaryview4);
        gallaryview4.setLayout(gallaryview4Layout);
        gallaryview4Layout.setHorizontalGroup(
            gallaryview4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gallaryview4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabelGalleryImage4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(73, Short.MAX_VALUE))
        );
        gallaryview4Layout.setVerticalGroup(
            gallaryview4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gallaryview4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(gallaryview4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel15)
                    .addComponent(jLabelGalleryImage4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        sidepanel3.add(gallaryview4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 280, -1));

        jPanel1.add(sidepanel3, java.awt.BorderLayout.PAGE_START);

        mainPanel.setLayout(new java.awt.CardLayout());

        galleryViewPanel.setBackground(new java.awt.Color(255, 255, 153));
        galleryViewPanel.setLayout(new java.awt.GridLayout(1, 0));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 35, 42)));
        jPanel4.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jPanel4.setLayout(new java.awt.BorderLayout());

        jLabel26.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(204, 35, 42));
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("Open directory");
        jLabel26.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel26.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel26MouseClicked(evt);
            }
        });
        jPanel4.add(jLabel26, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 660, 110, 30));

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(204, 35, 42));
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, 940, 600));

        g1Panel.setBackground(new java.awt.Color(204, 35, 42));

        g1Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        g1Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/no-stopping128.png"))); // NOI18N
        g1Label.setToolTipText(" Temporarily unavailable");
        g1Label.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        g1Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                g1LabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout g1PanelLayout = new javax.swing.GroupLayout(g1Panel);
        g1Panel.setLayout(g1PanelLayout);
        g1PanelLayout.setHorizontalGroup(
            g1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(g1Label, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
        );
        g1PanelLayout.setVerticalGroup(
            g1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(g1Label, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
        );

        jPanel3.add(g1Panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 680, -1, 131));

        g2Panel.setBackground(new java.awt.Color(204, 35, 42));
        g2Panel.setToolTipText("");

        g2Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        g2Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/no-stopping128.png"))); // NOI18N
        g2Label.setToolTipText(" Temporarily unavailable");
        g2Label.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        g2Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                g2LabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout g2PanelLayout = new javax.swing.GroupLayout(g2Panel);
        g2Panel.setLayout(g2PanelLayout);
        g2PanelLayout.setHorizontalGroup(
            g2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(g2Label, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
        );
        g2PanelLayout.setVerticalGroup(
            g2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(g2Label, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
        );

        jPanel3.add(g2Panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 680, -1, 131));

        jTextPane1.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jTextPane1.setForeground(new java.awt.Color(204, 35, 42));
        jScrollPane2.setViewportView(jTextPane1);

        jPanel3.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 90, 270, 470));

        g3Panel.setBackground(new java.awt.Color(204, 35, 42));

        g3Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        g3Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/no-stopping128.png"))); // NOI18N
        g3Label.setToolTipText(" Temporarily unavailable");
        g3Label.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        g3Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                g3LabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout g3PanelLayout = new javax.swing.GroupLayout(g3Panel);
        g3Panel.setLayout(g3PanelLayout);
        g3PanelLayout.setHorizontalGroup(
            g3PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(g3Label, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
        );
        g3PanelLayout.setVerticalGroup(
            g3PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(g3Label, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
        );

        jPanel3.add(g3Panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 680, -1, 131));

        g4Panel.setBackground(new java.awt.Color(204, 35, 42));

        g4Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        g4Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/no-stopping128.png"))); // NOI18N
        g4Label.setToolTipText(" Temporarily unavailable");
        g4Label.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        g4Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                g4LabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout g4PanelLayout = new javax.swing.GroupLayout(g4Panel);
        g4Panel.setLayout(g4PanelLayout);
        g4PanelLayout.setHorizontalGroup(
            g4PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(g4Label, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
        );
        g4PanelLayout.setVerticalGroup(
            g4PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(g4Label, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
        );

        jPanel3.add(g4Panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 680, -1, -1));

        g5Panel.setBackground(new java.awt.Color(204, 35, 42));

        g5Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        g5Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/no-stopping128.png"))); // NOI18N
        g5Label.setToolTipText(" Temporarily unavailable");
        g5Label.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        g5Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                g5LabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout g5PanelLayout = new javax.swing.GroupLayout(g5Panel);
        g5Panel.setLayout(g5PanelLayout);
        g5PanelLayout.setHorizontalGroup(
            g5PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(g5Label, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
        );
        g5PanelLayout.setVerticalGroup(
            g5PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(g5Label, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
        );

        jPanel3.add(g5Panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 680, -1, -1));

        lastImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lastImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/backRedd.png"))); // NOI18N
        lastImage.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lastImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lastImageMouseClicked(evt);
            }
        });
        jPanel3.add(lastImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 320, 60, 80));

        nextImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nextImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/nextRed.png"))); // NOI18N
        nextImage.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nextImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nextImageMouseClicked(evt);
            }
        });
        jPanel3.add(nextImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 320, 50, 80));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(204, 35, 42));
        jLabel12.setText("Refresh");
        jPanel3.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 600, 40, 30));

        jSeparator1.setForeground(new java.awt.Color(204, 35, 42));
        jPanel3.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 640, 290, 10));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(204, 35, 42));
        jLabel13.setText(" Current directory:");
        jPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 730, 110, 20));

        currentDirectoryPathField.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        currentDirectoryPathField.setForeground(new java.awt.Color(204, 35, 42));
        currentDirectoryPathField.setSelectedTextColor(new java.awt.Color(204, 35, 42));
        jPanel3.add(currentDirectoryPathField, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 760, 270, 30));

        cam5text.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        cam5text.setForeground(new java.awt.Color(204, 35, 42));
        cam5text.setText("CAM 5");
        jPanel3.add(cam5text, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 820, -1, -1));

        cam1text.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        cam1text.setForeground(new java.awt.Color(204, 35, 42));
        cam1text.setText("CAM 1");
        jPanel3.add(cam1text, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 820, -1, -1));

        cam2text.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        cam2text.setForeground(new java.awt.Color(204, 35, 42));
        cam2text.setText("CAM 2");
        jPanel3.add(cam2text, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 820, -1, -1));

        cam3text.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        cam3text.setForeground(new java.awt.Color(204, 35, 42));
        cam3text.setText("CAM 3");
        jPanel3.add(cam3text, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 820, -1, -1));

        cam4text.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        cam4text.setForeground(new java.awt.Color(204, 35, 42));
        cam4text.setText("CAM 4");
        jPanel3.add(cam4text, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 820, -1, -1));

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/refresh1.png"))); // NOI18N
        jLabel14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel3.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(1280, 600, 40, 30));

        StartLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/play-button1.png"))); // NOI18N
        StartLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        StartLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StartLabelMouseClicked(evt);
            }
        });
        jPanel3.add(StartLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 600, 30, 30));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 35, 42));
        jLabel1.setText("Infobox");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 60, -1, -1));

        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(204, 35, 42));
        jLabel20.setText(" Change picture directory:");
        jPanel3.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 660, 140, 30));

        jLabel21.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(204, 35, 42));
        jLabel21.setText("Start");
        jPanel3.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 600, 40, 30));

        jLabelFileCreateTime.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabelFileCreateTime.setForeground(new java.awt.Color(204, 35, 42));
        jLabelFileCreateTime.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jPanel3.add(jLabelFileCreateTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 30, 340, 20));

        jFileName.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jFileName.setForeground(new java.awt.Color(204, 35, 42));
        jFileName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jPanel3.add(jFileName, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, 340, 20));

        galleryViewPanel.add(jPanel3);

        mainPanel.add(galleryViewPanel, "card5");

        virtualRunaroundPanel.setBackground(new java.awt.Color(255, 255, 255));
        virtualRunaroundPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        StorePanel.setBackground(new java.awt.Color(255, 255, 255));
        StorePanel.setPreferredSize(new java.awt.Dimension(1200, 750));
        StorePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cam2_below.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        cam2_below.setForeground(new java.awt.Color(204, 35, 42));
        cam2_below.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cam2_below.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/video-camera32.png"))); // NOI18N
        cam2_below.setText("Cam 2 - below");
        cam2_below.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 35, 42)));
        cam2_below.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        StorePanel.add(cam2_below, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 470, 150, 40));

        cam1_above.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        cam1_above.setForeground(new java.awt.Color(204, 35, 42));
        cam1_above.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cam1_above.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/video-camera32.png"))); // NOI18N
        cam1_above.setText("Cam 1 - above");
        cam1_above.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 35, 42)));
        cam1_above.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cam1_above.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cam1_aboveMouseClicked(evt);
            }
        });
        StorePanel.add(cam1_above, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 430, 140, 40));

        jLabelStore.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Varound_background.png"))); // NOI18N
        StorePanel.add(jLabelStore, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        virtualRunaroundPanel.add(StorePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 1230, 780));

        ShelfPanel.setBackground(new java.awt.Color(255, 255, 255));
        ShelfPanel.setPreferredSize(new java.awt.Dimension(1200, 750));
        ShelfPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jptid1.setToolTipText("");
        jptid1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 35, 42)));
        ShelfPanel.add(jptid1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 100, 40, 30));

        jptid2.setToolTipText("");
        jptid2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 35, 42)));
        ShelfPanel.add(jptid2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 100, 40, 30));

        jptid3.setToolTipText("");
        jptid3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 35, 42)));
        ShelfPanel.add(jptid3, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 100, 40, 30));

        jptid4.setToolTipText("");
        jptid4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 35, 42)));
        ShelfPanel.add(jptid4, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 100, 40, 30));

        jptid5.setToolTipText("");
        jptid5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 35, 42)));
        ShelfPanel.add(jptid5, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 100, 40, 30));

        jptid6.setToolTipText("");
        jptid6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 35, 42)));
        ShelfPanel.add(jptid6, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 100, 40, 30));

        jptid7.setToolTipText("");
        jptid7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 35, 42)));
        ShelfPanel.add(jptid7, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 100, 40, 30));

        jptid8.setToolTipText("");
        jptid8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 35, 42)));
        ShelfPanel.add(jptid8, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 100, 40, 30));

        jptid9.setToolTipText("");
        jptid9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 35, 42)));
        ShelfPanel.add(jptid9, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 100, 40, 30));

        jptid10.setToolTipText("");
        jptid10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 35, 42)));
        ShelfPanel.add(jptid10, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 100, 40, 30));

        jLabelShelf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Varound_shelf.png"))); // NOI18N
        jLabelShelf.setText("jLabel34");
        ShelfPanel.add(jLabelShelf, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 20, 740, 450));
        ShelfPanel.add(jScrollPaneforTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 500, 770, 260));

        jLabel34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/reply.png"))); // NOI18N
        jLabel34.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel34MouseClicked(evt);
            }
        });
        ShelfPanel.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 30, 50));

        jLabel36.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(204, 35, 42));
        jLabel36.setText("Back");
        ShelfPanel.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, 30, 30));

        virtualRunaroundPanel.add(ShelfPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 1230, 780));

        mainPanel.add(virtualRunaroundPanel, "card4");

        reportingPanel.setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Soll", null, null},
                {"Ist (OCR)", null, null},
                {"Ist (Custom Vision)", null, null},
                {"Status", null, null}
            },
            new String [] {
                "Platz", "Name", "Preis"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setDefaultRenderer(Object.class, renderer);
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "0", "1", "2", "3", "4", "5", "6", "7", "8"
            }
        ));
        jTable2.setRowHeight(30);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable2);

        jButton1.setText("Gewählten Platz: Analysieren");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Alle Plätze: Analysieren");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Alle Plätze: Letzter Status");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout reportingPanelLayout = new javax.swing.GroupLayout(reportingPanel);
        reportingPanel.setLayout(reportingPanelLayout);
        reportingPanelLayout.setHorizontalGroup(
            reportingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reportingPanelLayout.createSequentialGroup()
                .addGroup(reportingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(reportingPanelLayout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addGroup(reportingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(reportingPanelLayout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addComponent(jButton1)
                        .addGap(37, 37, 37)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addGroup(reportingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                            .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(600, Short.MAX_VALUE))
        );
        reportingPanelLayout.setVerticalGroup(
            reportingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reportingPanelLayout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(reportingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(386, Short.MAX_VALUE))
        );

        mainPanel.add(reportingPanel, "card3");

        settingsPanel.setBackground(new java.awt.Color(255, 255, 255));
        settingsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 35, 42));
        jLabel2.setText("OCR recognition settings");
        settingsPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 20, -1, -1));

        jSeparator3.setForeground(new java.awt.Color(204, 35, 42));
        settingsPanel.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 140, 20, 30));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 35, 42));
        jLabel3.setText("Object recognition settings ");
        settingsPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 20, -1, -1));

        jSeparator4.setForeground(new java.awt.Color(204, 35, 42));
        settingsPanel.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(467, 45, 318, 10));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(204, 35, 42));
        jLabel10.setText("Default Directory Path:");
        jLabel10.setToolTipText("");
        settingsPanel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, -1, 30));

        jSeparator5.setForeground(new java.awt.Color(204, 35, 42));
        settingsPanel.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 45, 298, 10));

        jLabel22.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(204, 35, 42));
        jLabel22.setText(" General settings");
        settingsPanel.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 35, 42));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/questionmark.png"))); // NOI18N
        jLabel4.setToolTipText("Path used to analyze images");
        settingsPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 60, 30, 30));

        generalSettingsPathBox.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        generalSettingsPathBox.setForeground(new java.awt.Color(204, 35, 42));
        generalSettingsPathBox.setToolTipText("");
        generalSettingsPathBox.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        settingsPanel.add(generalSettingsPathBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, 170, 30));

        jLabel23.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(204, 35, 42));
        jLabel23.setText("Time period (6am-12pm)");
        jLabel23.setToolTipText("");
        settingsPanel.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 100, -1, 20));

        jLabel24.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(204, 35, 42));
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/questionmark.png"))); // NOI18N
        jLabel24.setToolTipText("Day of the week and time period during which images are to be analyzed");
        settingsPanel.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 60, 30, 30));

        jcombo1.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jcombo1.setForeground(new java.awt.Color(204, 35, 42));
        jcombo1.setBorder(null);
        jcombo1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jcombo1.setFocusTraversalPolicyProvider(true);
        jcombo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcombo1ActionPerformed(evt);
            }
        });
        settingsPanel.add(jcombo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 120, 150, 30));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 35, 42)));
        jPanel2.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jPanel2.setLayout(new java.awt.BorderLayout());

        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(204, 35, 42));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("Open and Store");
        jLabel25.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel25MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel25, java.awt.BorderLayout.CENTER);

        settingsPanel.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 100, 110, 30));

        jLabel28.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(204, 35, 42));
        jLabel28.setText("Analyse Date & Time:");
        jLabel28.setToolTipText("");
        settingsPanel.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 60, -1, 30));

        jLabel29.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(204, 35, 42));
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/questionmark.png"))); // NOI18N
        jLabel29.setToolTipText("Day of the week and time period during which images are to be analyzed");
        settingsPanel.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 60, 30, 30));

        jcombo2.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jcombo2.setForeground(new java.awt.Color(204, 35, 42));
        jcombo2.setBorder(null);
        jcombo2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jcombo2.setFocusTraversalPolicyProvider(true);
        jcombo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcombo2ActionPerformed(evt);
            }
        });
        settingsPanel.add(jcombo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 120, 150, 30));

        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/link1.png"))); // NOI18N
        jLabel30.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 35, 42)));
        settingsPanel.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 120, 30, 30));

        jcomboTime2.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jcomboTime2.setForeground(new java.awt.Color(204, 35, 42));
        jcomboTime2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jcomboTime2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcomboTime2ActionPerformed(evt);
            }
        });
        settingsPanel.add(jcomboTime2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 120, 150, 30));

        jSeparator6.setForeground(new java.awt.Color(204, 35, 42));
        settingsPanel.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(897, 45, 317, 10));

        jSeparator7.setForeground(new java.awt.Color(204, 35, 42));
        settingsPanel.add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 130, 20, 30));

        jcomboTime1.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jcomboTime1.setForeground(new java.awt.Color(204, 35, 42));
        jcomboTime1.setBorder(null);
        jcomboTime1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jcomboTime1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcomboTime1ActionPerformed(evt);
            }
        });
        settingsPanel.add(jcomboTime1, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 120, 150, 30));

        jLabel27.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(204, 35, 42));
        jLabel27.setText("Analyse Date & Time:");
        jLabel27.setToolTipText("");
        settingsPanel.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 60, -1, 30));

        jLabel31.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(204, 35, 42));
        jLabel31.setText("Day of the week");
        jLabel31.setToolTipText("");
        settingsPanel.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 100, -1, 20));

        jLabel32.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(204, 35, 42));
        jLabel32.setText("Day of the week");
        jLabel32.setToolTipText("");
        settingsPanel.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 100, -1, 20));

        jLabel33.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(204, 35, 42));
        jLabel33.setText("Time period (6am-12pm)");
        jLabel33.setToolTipText("");
        settingsPanel.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 100, -1, 20));

        mainPanel.add(settingsPanel, "card2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void settingsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingsMouseClicked
        //removing panel
        mainPanel.removeAll();
        mainPanel.repaint();
        mainPanel.revalidate();
        //set menu color
        settings.setBackground(new Color(160, 35, 42));
        reporting.setBackground(new Color(204, 35, 42));
        virtualrunaround.setBackground(new Color(204, 35, 42));
        gallaryview3.setBackground(new Color(204, 35, 42));
        //adding virtualrunaroundPanel
        mainPanel.add(settingsPanel);
        mainPanel.repaint();
        mainPanel.revalidate();
    }//GEN-LAST:event_settingsMouseClicked

    private void reportingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportingMouseClicked
        //removing panel
        mainPanel.removeAll();
        mainPanel.repaint();
        mainPanel.revalidate();
        //set menu color
        settings.setBackground(new Color(204, 35, 42));
        reporting.setBackground(new Color(160, 35, 42));
        virtualrunaround.setBackground(new Color(204, 35, 42));
        gallaryview3.setBackground(new Color(204, 35, 42));
        //adding virtualrunaroundPanel
        mainPanel.add(reportingPanel);
        mainPanel.repaint();
        mainPanel.revalidate();
    }//GEN-LAST:event_reportingMouseClicked

    private void virtualrunaroundMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_virtualrunaroundMouseClicked
        //removing panel
        mainPanel.removeAll();
        mainPanel.repaint();
        mainPanel.revalidate();
        //set menu color
        settings.setBackground(new Color(204, 35, 42));
        reporting.setBackground(new Color(204, 35, 42));
        virtualrunaround.setBackground(new Color(160, 35, 42));
        gallaryview3.setBackground(new Color(204, 35, 42));
        //adding virtualrunaroundPanel
        mainPanel.add(virtualRunaroundPanel);
        mainPanel.repaint();
        mainPanel.revalidate();
    }//GEN-LAST:event_virtualrunaroundMouseClicked

    private void gallaryviewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gallaryviewMouseClicked
        //removing panel
        mainPanel.removeAll();
        mainPanel.repaint();
        mainPanel.revalidate();
        //set menu color
        settings.setBackground(new Color(204, 35, 42));
        reporting.setBackground(new Color(204, 35, 42));
        virtualrunaround.setBackground(new Color(204, 35, 42));
        gallaryview3.setBackground(new Color(160, 35, 42));
        //adding virtualrunaroundPanel
        mainPanel.add(galleryViewPanel);
        mainPanel.repaint();
        mainPanel.revalidate();
    }//GEN-LAST:event_gallaryviewMouseClicked

    //Globale shared Variablen
    static float newScaleFactorHeight;
    static float newScaleFactorWidth;
    static List<String> imagePath;
    static List<String> imagesJsonPath;
    int[] allXCoordinatesOfBoundingBox;
    int[] allYCoordinatesOfBoundingBox;
    static List<String> imagePahtCopyForCamEvent;
    static List<String> imagesJsonPahtCopyForCamEvent;
    private void StartLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StartLabelMouseClicked
        Map<String, byte[]> imagePathMap = new HashMap<>();

        String directoryPath = currentDirectoryPathField.getText();
        if (!directoryPath.equals("")) {

            try {
                FileHelperClass fhc = new FileHelperClass();
                imagePath = fhc.sortPathsByTheFolderAndCreationTime(directoryPath);
                if (!imagePath.isEmpty() || imagePath != null) {
                    // PriceTagRecognitionAPI.startAnalyse("",directoryPath);            //Start REC
                    imagesJsonPath = fhc.ChangeFileExtensionToDotJson(imagePath);
                    //initialisiere g1Label bis g5Label
                    boolean emptyCondition = setFirstPictureToCamLabelN(imagePath);

                    imagePahtCopyForCamEvent = imagePath;
                    imagesJsonPahtCopyForCamEvent = imagesJsonPath;
                    //Skalierungswerte für Start der Application festlegen
                    if (!emptyCondition) {
                        getScaledImageIconFromImagePath(imagePath.get(0));
                        jLabel9.setText("Please choose an available cam view from below");
                        jLabel9.setHorizontalAlignment(JLabel.CENTER);
                    } else {
                        jLabel9.setIcon(null);
                        jLabel9.setHorizontalAlignment(JLabel.CENTER);
                        jLabelFileCreateTime.setText("");
                        jFileName.setText("");
                        jTextPane1.setText("");
                        JOptionPane.showMessageDialog(mainPanel, "Please choose a directory with cam1 to cam5 folders!");
                    }
                }

            } catch (IOException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(mainPanel, "Please first choose the directory with analysed images!");
            }
        } else {
            JOptionPane.showMessageDialog(mainPanel, "Please first choose the directory with analysed images!");
        }
    }//GEN-LAST:event_StartLabelMouseClicked

    public boolean setFirstPictureToCamLabelN(List<String> imagePaths) {
        boolean cam1IsSet = false;
        boolean cam2IsSet = false;
        boolean cam3IsSet = false;
        boolean cam4IsSet = false;
        boolean cam5IsSet = false;
        boolean emptyCondition = false;
        for (String p : imagePaths) {
            switch (FileHelperClass.getDirectoryName(p)) {
                case "cam1":
                    if (!cam1IsSet) {
                        g1Label.setIcon(getScaledImageIconFromImagePathForCamLabel(p));
                        g1Label.setToolTipText("Cam1");
                        cam1IsSet = true;
                    }
                    break;
                case "cam2":
                    if (!cam2IsSet) {
                        g2Label.setIcon(getScaledImageIconFromImagePathForCamLabel(p));
                        g2Label.setToolTipText("Cam2");
                        cam2IsSet = true;
                    }
                    break;
                case "cam3":
                    if (!cam3IsSet) {
                        g3Label.setIcon(getScaledImageIconFromImagePathForCamLabel(p));
                        g3Label.setToolTipText("Cam3");
                        cam3IsSet = true;
                    }
                    break;
                case "cam4":
                    if (!cam4IsSet) {
                        g4Label.setIcon(getScaledImageIconFromImagePathForCamLabel(p));
                        g4Label.setToolTipText("Cam4");
                        cam4IsSet = true;
                    }
                    break;
                case "cam5":
                    if (!cam5IsSet) {
                        g5Label.setIcon(getScaledImageIconFromImagePathForCamLabel(p));
                        g5Label.setToolTipText("Cam5");
                        cam5IsSet = true;
                    }
                    break;
                default:
                    break;

            }
        }
        if (!cam1IsSet) {
            g1Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/no-stopping128.png")));
            g1Label.setToolTipText("Temporarily unavailable");
        }
        if (!cam2IsSet) {
            g2Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/no-stopping128.png")));
            g2Label.setToolTipText("Temporarily unavailable");
        }
        if (!cam3IsSet) {
            g3Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/no-stopping128.png")));
            g3Label.setToolTipText("Temporarily unavailable");
        }
        if (!cam4IsSet) {
            g4Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/no-stopping128.png")));
            g3Label.setToolTipText("Temporarily unavailable");
        }
        if (!cam5IsSet) {
            g5Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/no-stopping128.png")));
            g5Label.setToolTipText("Temporarily unavailable");
        }
        if (!cam1IsSet && !cam2IsSet && !cam1IsSet && !cam1IsSet && !cam1IsSet) {
            jLabel9.setBackground(Color.WHITE);
            emptyCondition = true;
        }

        return emptyCondition;
    }

    private ImageIcon getScaledImageIconFromImagePath(String imagePath) {
        BufferedImage img = null;
        Image image = null;
        try {
            img = ImageIO.read(new File(imagePath));
        } catch (IOException e) {
            e.printStackTrace();
            System.exit(1);
        }
        newScaleFactorWidth = (float) ((img.getWidth() / jLabel9.getWidth()));
        newScaleFactorHeight = (float) (img.getHeight() / jLabel9.getHeight());
        if (newScaleFactorWidth != 0 || newScaleFactorHeight != 0) {
            image = img.getScaledInstance((int) (img.getWidth() / newScaleFactorWidth), (int) (img.getHeight() / newScaleFactorHeight), Image.SCALE_SMOOTH);
        } else {
            image = img;
        }

        return new ImageIcon(image);
    }

    private ImageIcon getScaledImageIconFromImagePathForCamLabel(String imagePath) {
        BufferedImage img = null;
        try {
            img = ImageIO.read(new File(imagePath));
        } catch (IOException e) {
            e.printStackTrace();
            System.exit(1);
        }
        float newScaleFactorWidth = img.getWidth() / g1Label.getWidth();
        float newScaleFactorHeight = img.getHeight() / g1Label.getHeight();
        Image image = img.getScaledInstance((int) (img.getWidth() / newScaleFactorWidth), (int) (img.getHeight() / newScaleFactorHeight), Image.SCALE_SMOOTH);
        return new ImageIcon(image);
    }

    private String getRecognizedText(ArrayList<BoundingBoxObject> bbo) {
        return "Folgender Text wurde erkannt: " + "\n\n" + ExtractLineText(bbo);
    }

    private void setXAndYCoordinates(ArrayList<BoundingBoxObject> bbo) {
        List<Integer> lineBoundingBox = ExtractLineBoundingBox(bbo);
        allXCoordinatesOfBoundingBox = GraphicHelperClass.ListToIntArray(GraphicHelperClass.ExtractTheXCoordinates(lineBoundingBox));
        allYCoordinatesOfBoundingBox = GraphicHelperClass.ListToIntArray(GraphicHelperClass.ExtractTheYCoordinates(lineBoundingBox));
    }

    int sliderIndex = 1;
    boolean changeCam = false;
    boolean slideBack = false;
    boolean slideNext = false;
    private void lastImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lastImageMouseClicked
        if (sliderIndex == imagePahtCopyForCamEvent.size()) {
            sliderIndex = imagePahtCopyForCamEvent.size() - 2;
        }
        if (slideBack) {
            sliderIndex -= 2;
            slideBack = false;
        }
        if (sliderIndex >= 0 && sliderIndex < imagePahtCopyForCamEvent.size()) {

            if (!changeCam) {
                ArrayList<BoundingBoxObject> bbo = GraphicHelperClass.getInitializedBoundingBoxObject(imagesJsonPahtCopyForCamEvent.get(sliderIndex));
                setXAndYCoordinates(bbo);
                String recognizedText = getRecognizedText(bbo);
                ImageIcon imageIcon = getScaledImageIconFromImagePath(imagePahtCopyForCamEvent.get(sliderIndex));
                setFileNameToJLabel(imagePahtCopyForCamEvent.get(sliderIndex));
                setCreationTimeToJLabel(imagePahtCopyForCamEvent.get(sliderIndex));
                jTextPane1.setText(recognizedText);
                jLabel9.setIcon(imageIcon);
                repaint(jLabel9.getGraphics());
                sliderIndex--;
                if (sliderIndex < 0) {
                    slideNext = false;
                } else {
                    slideNext = true;
                }
            }
        }
    }//GEN-LAST:event_lastImageMouseClicked
    private void setFileNameToJLabel(String path) {
        File file = new File(path);
        jFileName.setText("File Name: " + file.getName().toString());
    }

    private void setCreationTimeToJLabel(String path) {
        File file = new File(path);
        jLabelFileCreateTime.setText("Creation Time: " + FileHelperClass.getFileCreationTime(file));
    }
    private void nextImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextImageMouseClicked
        if (sliderIndex < 0) {
            sliderIndex = 1;
        }
        if (slideNext) {
            sliderIndex += 2;
            slideNext = false;
        }
        if (sliderIndex >= 0 && sliderIndex < imagePahtCopyForCamEvent.size()) {

            if (sliderIndex < imagePahtCopyForCamEvent.size()) {
                ArrayList<BoundingBoxObject> bbo = GraphicHelperClass.getInitializedBoundingBoxObject(imagesJsonPahtCopyForCamEvent.get(sliderIndex));
                setXAndYCoordinates(bbo);
                String recognizedText = getRecognizedText(bbo);
                ImageIcon imageIcon = getScaledImageIconFromImagePath(imagePahtCopyForCamEvent.get(sliderIndex));

                setFileNameToJLabel(imagePahtCopyForCamEvent.get(sliderIndex));
                setCreationTimeToJLabel(imagePahtCopyForCamEvent.get(sliderIndex));
                jTextPane1.setText(recognizedText);
                jLabel9.setIcon(imageIcon);
                repaint(jLabel9.getGraphics());
                sliderIndex++;
                changeCam = false;
                if (sliderIndex == imagePahtCopyForCamEvent.size()) {
                    slideBack = false;
                } else {
                    slideBack = true;
                }

            }
        }
    }//GEN-LAST:event_nextImageMouseClicked
    private void g1LabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g1LabelMouseClicked
        setGLabelSelectionToTextAreaAndMainPanel(CAM1);
    }//GEN-LAST:event_g1LabelMouseClicked
    private void g2LabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g2LabelMouseClicked
        setGLabelSelectionToTextAreaAndMainPanel(CAM2);
    }//GEN-LAST:event_g2LabelMouseClicked
    private void g3LabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g3LabelMouseClicked
        setGLabelSelectionToTextAreaAndMainPanel(CAM3);
    }//GEN-LAST:event_g3LabelMouseClicked
    private void g4LabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g4LabelMouseClicked
        setGLabelSelectionToTextAreaAndMainPanel(CAM4);
    }//GEN-LAST:event_g4LabelMouseClicked
    private void g5LabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g5LabelMouseClicked
        setGLabelSelectionToTextAreaAndMainPanel(CAM5);
    }//GEN-LAST:event_g5LabelMouseClicked
    private void setUnderlineCamXLabel(String cam) {
        String[] list = {CAM1, CAM2, CAM3, CAM4, CAM5};
        for (int i = 0; i < list.length; i++) {
            String str = list[i] + "text";
            for (Field field : Home.class.getDeclaredFields()) {
                if (field.getName().equals(str)) {
                    try {
                        if (cam.equals(list[i])) {
                            Method m = field.getType().getMethod("setBorder", Border.class);
                            m.invoke(field.get(this), new MatteBorder(0, 0, 1, 0, new Color(204, 35, 42)));
                        } else {
                            Method m = field.getType().getMethod("setBorder", Border.class);
                            m.invoke(field.get(this), new MatteBorder(0, 0, 0, 0, Color.white));
                        }
                    } catch (NoSuchMethodException ex) {
                        Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SecurityException ex) {
                        Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IllegalAccessException ex) {
                        Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IllegalArgumentException ex) {
                        Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (InvocationTargetException ex) {
                        Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }
    }


    private void jLabel25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel25MouseClicked
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = chooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            DBController dbc = DBController.getInstance();
            dbc.handleUpdateDB(chooser.getSelectedFile().getAbsolutePath(), ROOT_PATH, SETTINGS_DATA);
            String rootPathFromDB = dbc.handleGetDB(ROOT_PATH, SETTINGS_DATA);
            generalSettingsPathBox.setText(rootPathFromDB);
            currentDirectoryPathField.setText(rootPathFromDB);
        }
    }//GEN-LAST:event_jLabel25MouseClicked

    private void jLabel26MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel26MouseClicked
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = chooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            currentDirectoryPathField.setText(chooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_jLabel26MouseClicked

    private void jcomboTime2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcomboTime2ActionPerformed
        DBController dbc = DBController.getInstance();
        Object item = jcomboTime2.getSelectedItem();
        jcomboTime1.setSelectedItem(item);
        dbc.handleUpdateDB(item.toString(), SELECTED_TIME, SETTINGS_DATA);
    }//GEN-LAST:event_jcomboTime2ActionPerformed

    public void BindComboboxSetting() {
        final List<String> day = Arrays.asList("Monday", "Tuesday", "Wednesday",
                "Thursday", "Friday", "Saturday", "Monday - Saturday");
        final List<String> timePeriod = Arrays.asList("every 15 minutes", "every half an hour",
                "every hour", "every 2 houers");
        DBController dbc = DBController.getInstance();
        dbc.initDBConnection();
        String settingDataFromDB = dbc.handleGetDB(SELECTED_DATE, SETTINGS_DATA);
        String settingTimeFromDB = dbc.handleGetDB(SELECTED_TIME, SETTINGS_DATA);
        for (String d : day) {
            jcombo1.addItem(d);
            jcombo2.addItem(d);
        }
        for (String p : timePeriod) {
            jcomboTime1.addItem(p);
            jcomboTime2.addItem(p);
        }
        if (!settingDataFromDB.equals("") && !settingTimeFromDB.equals("")) {
            jcombo1.setSelectedItem(settingDataFromDB);
            jcombo2.setSelectedItem(settingDataFromDB);
            jcomboTime1.setSelectedItem(settingTimeFromDB);
            jcomboTime2.setSelectedItem(settingTimeFromDB);
        }
    }
    private void jcombo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcombo1ActionPerformed
        DBController dbc = DBController.getInstance();
        Object item = jcombo1.getSelectedItem();
        jcombo2.setSelectedItem(item);
        dbc.handleUpdateDB(item.toString(), SELECTED_DATE, SETTINGS_DATA);
    }//GEN-LAST:event_jcombo1ActionPerformed

    private void jcombo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcombo2ActionPerformed
        DBController dbc = DBController.getInstance();
        Object item = jcombo2.getSelectedItem();
        jcombo1.setSelectedItem(item);
        dbc.handleUpdateDB(item.toString(), SELECTED_DATE, SETTINGS_DATA);
    }//GEN-LAST:event_jcombo2ActionPerformed

    private void jcomboTime1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcomboTime1ActionPerformed
        DBController dbc = DBController.getInstance();
        Object item = jcomboTime1.getSelectedItem();
        jcomboTime2.setSelectedItem(item);
        dbc.handleUpdateDB(item.toString(), SELECTED_TIME, SETTINGS_DATA);
    }//GEN-LAST:event_jcomboTime1ActionPerformed

    private void cam1_aboveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cam1_aboveMouseClicked
        StorePanel.setVisible(false);
        ShelfPanel.setVisible(true);
        jScrollPaneforTable.setVisible(true);
        createTable();


    }//GEN-LAST:event_cam1_aboveMouseClicked

    private void jLabel34MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel34MouseClicked
        ShelfPanel.setVisible(false);
        StorePanel.setVisible(true);
    }//GEN-LAST:event_jLabel34MouseClicked

    private void gallaryview4gallaryviewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gallaryview4gallaryviewMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_gallaryview4gallaryviewMouseClicked

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        if (SwingUtilities.isLeftMouseButton(evt)) {
            gl_shelf_id = 0; //immer 0
            gl_row_id = jTable2.getSelectedRow();
            gl_place_id = jTable2.getSelectedColumn();
            System.out.println("shelf_id: " + gl_shelf_id + "  row_id:" + gl_row_id + "  place_id:" + gl_place_id);
            show_status(gl_shelf_id, gl_row_id, gl_place_id);
        }
    }//GEN-LAST:event_jTable2MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (gl_shelf_id != -1 && gl_row_id != -1 && gl_place_id != -1) {
            analyse(gl_shelf_id, gl_row_id, gl_place_id, "");
            show_status(gl_shelf_id, gl_row_id, gl_place_id);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        show_status_all();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        task = new Task();
        task.addPropertyChangeListener(this);
        task.execute();
    }//GEN-LAST:event_jButton2ActionPerformed
    public void createTable() {
        PriceTagComparator.getPriceTagsFromDB();
        JTable table;
        String[] columnNames = {"ID", "Product", "Status"};
        Object[][] data = {
            {"1", "Spritzgebäck", "OK"},
            {"2", "Souce Hollandaise", "Price Tag incorrect"},};
        table = new JTable(data, columnNames);
        table.setPreferredScrollableViewportSize(new Dimension(100, 100));
        table.setFillsViewportHeight(true);
        jScrollPaneforTable.getViewport().add(table);
    }

    private void setGLabelSelectionToTextAreaAndMainPanel(String cam) {
        //Set reset variables when choose new cam
        //TODO IF NOT IMAGEPATHS LOAD (CLICK ON THIS BEFOR START BUTTON) NULL POINTER EXCAPTION 
        slideBack = false;
        slideNext = false;
        changeCam = true;
        sliderIndex = 1;
        List<String> camXImagePaths = new ArrayList();
        FileHelperClass fhc = new FileHelperClass();
        for (String path : imagePath) {
            if (fhc.getDirectoryName(path).equals(cam)) {
                camXImagePaths.add(path);
            }
        }
        if (!camXImagePaths.isEmpty()) {
            imagePahtCopyForCamEvent = camXImagePaths;
            imagesJsonPahtCopyForCamEvent = fhc.ChangeFileExtensionToDotJson(camXImagePaths);
            ArrayList<BoundingBoxObject> bbo = GraphicHelperClass.getInitializedBoundingBoxObject(imagesJsonPahtCopyForCamEvent.get(0));

            setXAndYCoordinates(bbo);
            String recognizedText = getRecognizedText(bbo);
            ImageIcon imageIcon = getScaledImageIconFromImagePath(imagePahtCopyForCamEvent.get(0));

            setFileNameToJLabel(imagePahtCopyForCamEvent.get(0));
            setCreationTimeToJLabel(imagePahtCopyForCamEvent.get(0));
            jTextPane1.setText(recognizedText);
            jLabel9.setHorizontalAlignment(jLabel9.LEADING);
            jLabel9.setIcon(imageIcon);
            repaint(jLabel9.getGraphics());
        }
        setUnderlineCamXLabel(cam);
    }

    public void analyze_all() {
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = chooser.showOpenDialog(chooser);
//            if (returnVal == JFileChooser.APPROVE_OPTION) {
//                currentDirectoryPathField.setText(chooser.getSelectedFile().getAbsolutePath());
//            }
        String parentfolder_path = chooser.getSelectedFile().getAbsolutePath();
        File[] subfolders = new File(parentfolder_path).listFiles(File::isDirectory);
        double progress_steps = 100 / subfolders.length;
        double progress_status = 0;
        for (File f : subfolders) {
            String subfolder_path = f.getAbsolutePath();
            System.out.println("Choosen folder with subfolders: " + subfolder_path);
            String folder_name = f.getName();
            String[] ids = folder_name.split("_");
            System.out.println(ids[0] + ids[1] + ids[2]);
            int shelf_id = Integer.parseInt(ids[0]);
            int row_id = Integer.parseInt(ids[1]);
            int place_id = Integer.parseInt(ids[2]);
            analyse(shelf_id, row_id, place_id, subfolder_path);
            show_status(shelf_id, row_id, place_id);
            progress_status += progress_steps;
            if (progress_status < 100) {
                jProgressBar1.setValue((int) progress_status);
            } else {
                jProgressBar1.setValue(jProgressBar1.getMaximum());
            }
            jProgressBar1.repaint();
        }
    }

    public void show_status(int shelf_id, int row_id, int place_id) {
        String product_name1 = dbc2.handleGetDB2("product_name1", shelf_id, row_id, place_id);
        String product_name2 = dbc2.handleGetDB2("product_name2", shelf_id, row_id, place_id);

        String product_name = product_name1 + " " + product_name2;
        String price = dbc2.handleGetDB2("price", shelf_id, row_id, place_id);
        String ocr_price = dbc2.handleGetDB2("ocr_price", shelf_id, row_id, place_id);
        String ocr_product_name1 = dbc2.handleGetDB2("ocr_product_name1", shelf_id, row_id, place_id);
        String ocr_product_name2 = dbc2.handleGetDB2("ocr_product_name2", shelf_id, row_id, place_id);
        String ocr_product_name = ocr_product_name1 + " " + ocr_product_name2;
        if (null == ocr_product_name2) {
            ocr_product_name = ocr_product_name1;
        }
        String cv_product_name = dbc2.handleGetDB2("cv_product_name", shelf_id, row_id, place_id);

        //Datenbank werte abgleichen - set status_table values
        //names
        jTable1.setValueAt(product_name, 0, 1);
        jTable1.setValueAt(ocr_product_name, 1, 1);
        jTable1.setValueAt(cv_product_name, 2, 1);
        //prices
        jTable1.setValueAt(price, 0, 2);
        jTable1.setValueAt(ocr_price, 1, 2);
        jTable1.setValueAt("  -  ", 2, 2);
        //status
        String status = "Gut";

        if (!product_name.equals(ocr_product_name) || !product_name.equals(cv_product_name)) {
            status = "Schlecht";
            jTable1.setValueAt("Fehler!", 3, 1);
            //dbc2.handleUpdateDB2("status_price", shelf_id, row_id, place_id, status);
        } else {
            jTable1.setValueAt("Korrekt!", 3, 1);
        }

        if (!price.equals(ocr_price)) {
            status = "Schlecht";
            jTable1.setValueAt("Fehler!", 3, 2);
        } else {
            jTable1.setValueAt("Korrekt!", 3, 2);
        }

        if ((ocr_price == null || ocr_price.isEmpty()) && (ocr_product_name == null || ocr_product_name.isEmpty()) && (cv_product_name == null || cv_product_name.isEmpty())) {
            status = "Neutral";
            jTable1.setValueAt("Überprüfung ausstehend!", 3, 2);
            jTable1.setValueAt("Überprüfung ausstehend!", 3, 1);
        }

        //Soll-Wert
//	Ist-Wert (OCR)
//	Ist-Wert (Custom Vision)
        //Übersichtstabelle färben:
        renderer.status_table[row_id][place_id] = status; //Statt "gut" den Wert für Status eingeben und TableCellRenderer bearbeiten
        jTable2.repaint();

//untere Tabelle anpassen
    }

    public void show_status_all() {
        for (int i = 0; i <= 1; i++) {
            for (int j = 0; j <= 8; j++) {
                show_status(0, i, j);
            }
        }
    }

    public void analyse(int shelf_id, int row_id, int place_id, String folder_path) {
        //Bildordner auswählen

        if (folder_path.isEmpty()) {
            JFileChooser chooser = new JFileChooser();
            chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            int returnVal = chooser.showOpenDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                currentDirectoryPathField.setText(chooser.getSelectedFile().getAbsolutePath());
            }
            folder_path = chooser.getSelectedFile().getAbsolutePath();
        }

        //Bild an OCR
        PriceTagRecognitionAPI.startAnalyse("", folder_path);

        File folder = new File(folder_path);
        File[] listOfFiles = folder.listFiles();
        String image_path = null;
        for (File file : listOfFiles) {
            if (file.isFile()) {
                String str = file.getAbsolutePath();
                if (str.lastIndexOf(".") != -1 && str.lastIndexOf(".") != 0) {
                    image_path = str.substring(0, str.lastIndexOf(".")) + ".json";
                }
            }
        }
        //PriceTag Analyse durchführen
        ArrayList<String> price_Tag = PriceTagComparator.getpriceTagsFromJson(image_path);
        String ocr_product_name1 = price_Tag.get(0);
        String ocr_product_name2 = price_Tag.get(1);
        String ocr_price = price_Tag.get(2);
        System.out.println("Erkannt:" + ocr_product_name1 + "  " + ocr_product_name2 + "  " + ocr_price);
        //Ergebnis OCR in DB (mithilfe von Regalplatz)
        dbc2.handleUpdateDB2("ocr_product_name1", shelf_id, row_id, place_id, ocr_product_name1);
        dbc2.handleUpdateDB2("ocr_product_name2", shelf_id, row_id, place_id, ocr_product_name2);
        dbc2.handleUpdateDB2("ocr_price", shelf_id, row_id, place_id, ocr_price);

        //Bild an CustomVision schicken
        //Todo
        //Ergebnis CustomVision in DB (mithilfe von Regalplatz)
        //Todo
        //show_status(shelf_id, row_id, place_id);
    }

    public void repaint(Graphics g) {
        super.paint(g);
        Thread t = new Thread(new Runnable() {
            public void run() {
                SwingUtilities.invokeLater(() -> {
                    if (allXCoordinatesOfBoundingBox != null) {
                        int[] tempX = new int[4];
                        int[] tempY = new int[4];
                        int counter = 0;
                        int number = 1;
                        for (int i = 0; i < allXCoordinatesOfBoundingBox.length; i++) {

                            for (int j = 0; j < 4; j++) {
                                tempX[j] = allXCoordinatesOfBoundingBox[counter + j];
                                tempY[j] = allYCoordinatesOfBoundingBox[counter + j];
                            }
                            g.setColor(Color.red);
                            g.drawPolygon(tempX, tempY, 4);
                            g.setColor(Color.RED);
                            g.setFont(new Font("Normal", Font.BOLD, 14));
                            g.drawString(number + ") ", (tempX[1] + 5), (tempY[0] + tempY[2]) / 2);
                            counter += 4;
                            number++;
                            if (counter == allXCoordinatesOfBoundingBox.length) {
                                break;
                            }
                        }
                    }
                });
            }
        });
        t.start();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        dbc2.initDBConnection();
        try {
            /* Create and display the form */
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Home home = new Home();
                home.setVisible(true);
                home.setTitle("Kaufland - Shelf Management System");
                home.setIconImage(new javax.swing.ImageIcon(getClass().getResource("/images/logo40.jpg")).getImage());
                //Aus DB PATH abfragen -> der in settings gewählt wurde
                DBController dbc = DBController.getInstance();
                dbc.initDBConnection();
                String currenPath = dbc.handleGetDB(ROOT_PATH, SETTINGS_DATA);
                currentDirectoryPathField.setText(currenPath);
                generalSettingsPathBox.setText(currenPath);

            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ShelfPanel;
    private javax.swing.JLabel StartLabel;
    private javax.swing.JPanel StorePanel;
    private javax.swing.JLabel cam1_above;
    private javax.swing.JLabel cam1text;
    private javax.swing.JLabel cam2_below;
    private javax.swing.JLabel cam2text;
    private javax.swing.JLabel cam3text;
    private javax.swing.JLabel cam4text;
    private javax.swing.JLabel cam5text;
    private static javax.swing.JTextField currentDirectoryPathField;
    private javax.swing.JPanel footerpanel;
    private static javax.swing.JLabel g1Label;
    private javax.swing.JPanel g1Panel;
    private javax.swing.JLabel g2Label;
    private javax.swing.JPanel g2Panel;
    private javax.swing.JLabel g3Label;
    private javax.swing.JPanel g3Panel;
    private javax.swing.JLabel g4Label;
    private javax.swing.JPanel g4Panel;
    private javax.swing.JLabel g5Label;
    private javax.swing.JPanel g5Panel;
    private javax.swing.JPanel gallaryview3;
    private javax.swing.JPanel gallaryview4;
    private javax.swing.JPanel galleryViewPanel;
    private static javax.swing.JTextField generalSettingsPathBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jFileName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelFileCreateTime;
    private javax.swing.JLabel jLabelGalleryImage3;
    private javax.swing.JLabel jLabelGalleryImage4;
    private javax.swing.JLabel jLabelLogoImage;
    private javax.swing.JLabel jLabelReportingLabel;
    private javax.swing.JLabel jLabelSettingsImage;
    private javax.swing.JLabel jLabelShelf;
    private javax.swing.JLabel jLabelStore;
    private javax.swing.JLabel jLabelVirtualImage;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPaneforTable;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JComboBox<String> jcombo1;
    private javax.swing.JComboBox<String> jcombo2;
    private javax.swing.JComboBox<String> jcomboTime1;
    private javax.swing.JComboBox<String> jcomboTime2;
    private javax.swing.JLabel jptid1;
    private javax.swing.JLabel jptid10;
    private javax.swing.JLabel jptid2;
    private javax.swing.JLabel jptid3;
    private javax.swing.JLabel jptid4;
    private javax.swing.JLabel jptid5;
    private javax.swing.JLabel jptid6;
    private javax.swing.JLabel jptid7;
    private javax.swing.JLabel jptid8;
    private javax.swing.JLabel jptid9;
    private javax.swing.JLabel lastImage;
    private javax.swing.JPanel logopanel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel nextImage;
    private javax.swing.JPanel reporting;
    private javax.swing.JPanel reportingPanel;
    private javax.swing.JPanel settings;
    private javax.swing.JPanel settingsPanel;
    private javax.swing.JPanel sidepanel3;
    private javax.swing.JPanel virtualRunaroundPanel;
    private javax.swing.JPanel virtualrunaround;
    // End of variables declaration//GEN-END:variables

        /**
     * Invoked when task's progress property changes.
     */
    public void propertyChange(PropertyChangeEvent evt) {
        if ("progress" == evt.getPropertyName()) {
            int progress = (Integer) evt.getNewValue();
            jProgressBar1.setValue(progress);
//            taskOutput.append(String.format(
//                    "Completed %d%% of task.\n", task.getProgress()));
        } 
    }

class Task extends SwingWorker<Void, Void> {
        /*
         * Main task. Executed in background thread.
         */
        @Override
        public Void doInBackground() {
            Random random = new Random();
            int progress = 0;
            //Initialize progress property.
            setProgress(0);
            JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = chooser.showOpenDialog(chooser);
//            if (returnVal == JFileChooser.APPROVE_OPTION) {
//                currentDirectoryPathField.setText(chooser.getSelectedFile().getAbsolutePath());
//            }
        String parentfolder_path = chooser.getSelectedFile().getAbsolutePath();
        File[] subfolders = new File(parentfolder_path).listFiles(File::isDirectory);
        double progress_steps = 100 / subfolders.length;
        double progress_status = 0;
        for (File f : subfolders) {
            String subfolder_path = f.getAbsolutePath();
            System.out.println("Choosen folder with subfolders: " + subfolder_path);
            String folder_name = f.getName();
            String[] ids = folder_name.split("_");
            System.out.println(ids[0] + ids[1] + ids[2]);
            int shelf_id = Integer.parseInt(ids[0]);
            int row_id = Integer.parseInt(ids[1]);
            int place_id = Integer.parseInt(ids[2]);
            analyse(shelf_id, row_id, place_id, subfolder_path);
            show_status(shelf_id, row_id, place_id);
            progress_status += progress_steps;
            if (progress_status < 100) {
                //jProgressBar1.setValue((int) progress_status);
                setProgress((int)progress_status);
            } else {
                setProgress(100);
            }
            jProgressBar1.repaint();
        }
            
            
            
//            while (progress < 100) {
//                //Sleep for up to one second.
//                try {
//                    Thread.sleep(random.nextInt(1000));
//                } catch (InterruptedException ignore) {}
//                //Make random progress.
//                progress += random.nextInt(10);
//                setProgress(Math.min(progress, 100));
//            }
            return null;
        }

        /*
         * Executed in event dispatching thread
         */
        @Override
        public void done() {
//            Toolkit.getDefaultToolkit().beep();
//            startButton.setEnabled(true);
//            setCursor(null); //turn off the wait cursor
//            taskOutput.append("Done!\n");
        }
    }    
    
}
